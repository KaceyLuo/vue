{"id":"vmodel.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    v-model用于表单类元素上的双向绑定事件,用于input框以及textarea等\r\n    <div id=\"app\">\r\n        <input type=\"text\" v-model=\"value\">\r\n        {{value}}<br>\r\n        所显示的值只依赖于所绑定的数据，不再关心初始化时插入的value值<br>\r\n        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"msg\">多行文本初始化值</textarea>\r\n        <hr>\r\n        单个单选框：直接用v-bind绑定一个布尔值<br>\r\n        <input type=\"radio\" name=\"\" :checked=\"oneRadio\"><br>\r\n        多个单选框:v-model配合value使用，绑定选中单选框的value值，此处绑定的初始值可以随意<br>\r\n        小花<input type=\"radio\" name=\"check\" value=\"小花\" v-model=\"checkName\">\r\n        小红<input type=\"radio\" name=\"check\" value=\"小红\" v-model=\"checkName\">\r\n        小芳<input type=\"radio\" name=\"check\" value=\"小芳\" v-model=\"checkName\">\r\n        <hr>\r\n        复选框：<br>\r\n        单个复选框：用v-bind <input type=\"checkbox\" :checked=\"oneRadio\">\r\n        单个复选框：用v-model <input type=\"checkbox\" v-model=\"oneRadio\">\r\n        多个复选框：v-model配合value使用，v-model绑定一个数组 如果绑定的是一个字符串就会转化成布尔值与所有绑定的复选框的checks属性相对应<br>\r\n        小花<input type=\"radio\" name=\"check\" value=\"小花\" v-model=\"checks\">\r\n        小红<input type=\"radio\" name=\"check\" value=\"小红\" v-model=\"checks\">\r\n        小芳<input type=\"radio\" name=\"check\" value=\"小芳\" v-model=\"checks\">\r\n        <hr>\r\n        单选下拉框:<br>\r\n        v-model一定绑定在select上\r\n        如果是单选，value值可以是字符串或数组，没有value就匹配一个text值<br>\r\n        <select v-model=\"selected\">\r\n            <option value=\"小白\">小白</option>\r\n            <option value=\"小绿\">小绿</option>\r\n            <option value=\"小紫\">小紫</option>\r\n            <br>\r\n        </select>\r\n        现在选中的是：{{selected}}\r\n        <br>\r\n        如果是多选就需要v-model来配合value使用，v-model绑定一个数组，与复选框类似<br>\r\n        <select v-model=\"selectedmul\" multiple=\"\">\r\n            <option value=\"小白\">小白</option>\r\n            <option value=\"小绿\">小绿</option>\r\n            <option value=\"小紫\">小紫</option>\r\n        </select>\r\n        现在选中的是：{{selectedmul}}\r\n        \r\n        <hr style=\"color:darkred\">\r\n        绑定值：<br>\r\n        单选按钮：<br>\r\n        只需要用v-bind给单个单选框绑定一个value值，此时，v-model绑定的就是他的value值\r\n        <input type=\"radio\" v-model=\"picked\" :value=\"value\">   -------{{picked}} \r\n        <br>\r\n        复选按钮：选中和不选中的value不一样\r\n        <input type=\"checkbox\" v-model=\"toggle\" :true-value=\"value1\" :false-value=\"value2\"> \r\n        <br>\r\n        选中：{{toggle==value1}}<br>\r\n        未中：{{toggle==value2}}\r\n        <br>\r\n        下拉框：在select标签上绑定value值对option并没有变化 在option上绑定能显示value<br>\r\n        <select v-model=\"selectedValue\" :value=\"{num:11}\">\r\n            <option value=\"小白\">小白</option>\r\n            <option value=\"小绿\">小绿</option>\r\n            <option value=\"小紫\">小紫</option>\r\n        </select>\r\n        现在选中的是{{typeof selectedValue}}----{{selectedValue}}\r\n        <select v-model=\"selectedValue\">\r\n            <option value=\"小白\" :value=\"{num:11}\">小白</option>\r\n            <option value=\"小绿\">小绿</option>\r\n            <option value=\"小紫\">小紫</option>\r\n        </select>\r\n        现在选中的是{{typeof selectedValue}}----{{selectedValue}}\r\n        <br>\r\n        <hr>\r\n        修饰符：<br>\r\n        lazy: v-model默认是在input输入时同步输入框的数据，而lazy修饰符可以使其失去焦点或者敲回车之后再更新<br>\r\n        <input type=\"text\" v-model=\"inputStr\">{{inputStr}}\r\n        <input type=\"text\" v-model.lazy=\"lazyStr\">{{lazyStr}}\r\n        number:将输入的字符转化成number类型<br>\r\n        <input type=\"text\" v-model=\"isNum\"><br>\r\n        {{typeof isNum}}<br>\r\n        <input type=\"text\" v-model.number=\"isNumber\"><br>\r\n        {{typeof isNumber}}\r\n        <br>\r\n        trim: 自动过滤输入过程中输入首尾的空格<br>\r\n        <input type=\"text\" v-model=\"trimStr\"><br>\r\n        {{trimStr.split('').length}}<br>\r\n        <input type=\"text\" v-model.trim=\"trimStr\"><br>\r\n        {{trimStr.split('').length}}\r\n        \r\n    </div>\r\n\r\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script>\r\n    <script>\r\n        var app=new Vue({\r\n            el:\"#app\",\r\n            data:{\r\n                value:'',\r\n                msg:'',\r\n                oneRadio:true,\r\n                checkName:'小花',\r\n                checks:[],\r\n                selected:\"\",\r\n                selectedmul:[],\r\n                picked:true,\r\n                value:'000',\r\n                toggle:true,\r\n                value1:'我被选中了',\r\n                value2:'我没有被选中',\r\n                selectedValue:'',\r\n                inputStr:'',\r\n                lazyStr:'',\r\n                isNum:'',\r\n                isNumber:'',\r\n                trimStr:''\r\n\r\n            }\r\n        })\r\n    </script>\r\n\r\n</body>\r\n</html>"},"hash":"e095fe376866f3f8e66ef7bf39281235","cacheData":{}}